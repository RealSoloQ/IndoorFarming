import cv2
import numpy as np

# 0 if only one camera
cam = cv2.VideoCapture(0)

counter = 0

while True: 
    result, image = cam.read()
    if counter == 10:
        if result:
            # saving image in local storage
            cv2.imwrite("Color Segmentation.png", image)
            break

    counter += 1


# Reading the image
img = cv2.imread('PurpleDot.jpg')

#define kernel size  
kernel = np.ones((7,7),np.uint8)

# convert to hsv colorspace 
hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)

# lower bound and upper bound for green color 
lower_bound = np.array([0, 0, 0])   
upper_bound = np.array([225, 0, 225])

# lower bound and upper bound for Yellow color 
# lower_bound = np.array([20, 80, 80])     
# upper_bound = np.array([30, 255, 255])

# find the colors within the boundaries
mask = cv2.inRange(hsv, lower_bound, upper_bound)

# Remove unnecessary noise from mask
mask = cv2.morphologyEx(mask, cv2.MORPH_CLOSE, kernel)
mask = cv2.morphologyEx(mask, cv2.MORPH_OPEN, kernel)

# Segment only the detected region
segmented_img = cv2.bitwise_and(img, img, mask=mask)

# Find contours from the mask
contours, hierarchy = cv2.findContours(mask.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# Draw contour on segmented image
# output = cv2.drawContours(segmented_img, contours, -1, (0, 0, 255), 3)

# Draw contour on original image

output = cv2.drawContours(img, contours, -1, (0, 0, 255), 3)

# Showing the output

# cv2.imshow("Image", img)
cv2.imshow("Output", output)

cv2.waitKey(0)
cv2.destroyAllWindows()